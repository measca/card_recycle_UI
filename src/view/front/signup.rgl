<template>
    <frontTemp>
        <div class="signin-panel">
            <div class="container">
                <div r-hide={showState != 0}>
                    <div class="box signform signupform">
                        <h2 class="h4 clearfix">
                            <small class="pull-right">
                                <a href="#/signin">已经有账号，从这登录</a>
                            </small>
                            注册
                        </h2>
                        <form onsubmit="return false;">
                            <div class="form-group">
                                <label class="control-label"><span class="text-red">*</span> 用户名(E-mail)：</label>
                                <input type="text" class="form-control" maxlength="30" r-model="user.eMail | trim" on-blur={this.isAccExists()} >
                                <div class="text-red" r-hide={$validation.eMail.isPass}>{$validation.eMail.msg}</div>
                            </div>
                            <div class="form-group">
                                <label class="control-label"><span class="text-red">*</span> 登录密码：</label>
                                <input type="password" class="form-control" maxlength="15" r-model="user.passworld | trim">
                                <div class="text-red" r-hide={$validation.passworld.isPass}>{$validation.passworld.msg}</div>
                            </div>
                            <div class="form-group">
                                <label class="control-label"><span class="text-red">*</span> 确认密码：</label>
                                <input type="password" class="form-control" maxlength="15" r-model="user.passworldTwo | trim">
                                <div class="text-red" r-hide={$validation.passworldTwo.isPass}>{$validation.passworldTwo.msg}</div>
                            </div>
                            <div class="form-group hide">
                                <label class="control-label"><span class="text-red">*</span> 手机：</label>
                                <input type="text" class="form-control" maxlength="11" r-model="user.phone | trim" on-blur={this.isTelExists()} />
                                <div class="text-red" r-hide={$validation.phone.isPass}>{$validation.phone.msg}</div>
                            </div>
                            <div class="form-group hide">
                                <label class="control-label"><span class="text-red">*</span> 手机验证码：</label>
                                <input type="text" class="form-control pull-left" maxlength="6" style="width: 210px;" r-model="user.phoneCode | trim">
                                <button type="button" class="btn btn-default btn-block pull-right" style="width: 100px;" {#if !$validation.phone.__isPass || sendTimeVal > 0 }disabled{/if} on-click={this.sendCode()}>
                                    获取验证码 {sendTimeVal > 0 ? sendTimeVal : ''}
                                </button>
                                <div class="text-red" style="clear: both;" r-hide={$validation.phoneCode.isPass}>{$validation.phoneCode.msg}</div>
                                <div class="clear"></div>
                            </div>
                            <div class="form-group hide">
                                <label class="control-label">联系QQ</label>
                                <input type="text" class="form-control" maxlength="12" r-model="user.qq | trim">
                                <div class="text-red" r-hide={$validation.qq.isPass}>{$validation.qq.msg}</div>
                            </div>
                            <div class="form-group">
                                <label class="checkbox" tip="阅读和同意注册协议后才能注册！">
                                    <input type="checkbox" r-model="user.isAgree">已阅读并同意
                                    <a target="_blank" href="#/agreement">注册协议</a>
                                </label>
                            </div>
                            <div class="form-group">
                                <button class="btn btn-danger btn-block" type="submit" on-click={this.register()} {#if !($validation.$isPass && user.isAgree) || isSend}disabled{/if}>
                                    {isSend ? "正在注册...":"立即注册"}
                                </button>
                            </div>
                        </form>
                    </div>
                    <div class="signbanner"><img style="margin-top: 110px" src="{signImg}"></div>
                </div>
                <div class="box getpass" r-hide={showState != 1}>
                    <div class="safe-icon-box">
                        <i class="icon icon-fore1"></i>
                        <div class="fore">
                            <h3 class="font1">注册成功</h3>
                            <p>{timeNum}秒后自动进入登录页面<br>您可以手动 <a href="#/signin">点击此进入</a> 登录页面</p>
                            <a class="btn btn-default btn-sm mt10" href="#/index">返回首页</a>
                        </div>
                    </div>
                </div>
                <div class="box getpass" r-hide={showState != 2}>
                    <div class="safe-icon-box">
                        <i class="icon icon-fore1"></i>
                        <div class="fore">
                            <h3 class="font1">登录成功</h3>
                            <p>{timeNum}秒后自动进入个人中心<br>您可以手动 <a href="#/user/index">点击此进入</a> 个人中心页面</p>
                            <a class="btn btn-default btn-sm mt10" href="#/index">返回首页</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </frontTemp>
</template>
<script>
    import {signup, isTelExists, isAccExists} from "../../service/userService.js";
    import {sendPhoneCode} from "../../service/otherService.js";
    import gritter from "../../tool/gritter/gritter.js";
    import config from "web.config";

    export default {
        data: {
            signImg: config.signImg,
            showState: 0,
            timeNum: 3,
            sendTime: -1,
            sendTimeVal: 0,
            isSend: false,
            user: {
                eMail: "",
                passworld: "",
                passworldTwo: "",
                phone: "",
                phoneCode: "",
                qq: "",
                isAgree: false
            }
        },
        components: {
            "frontTemp": require("../../component/frontTemplate/front.rgl")
        },
        init() {
            if(isLogin()) {
                this.$update({
                    timeNum: 3,
                    showState: 2
                });
                this.goMIndex();
            }
        },
        register() {
            var self = this;
            self.$update("isSend", true);
            signup(this.data.user, ()=>{
                self.$update({
                    showState: 1,
                    timeNum: 3
                });
                self.goLIndex();
                self.$update("isSend", false);
            }, (msg)=>{
                self.$update("isSend", false);
                gritter(msg).warning();
            });
            return false;
        },
        sendCode() {
            var self = this;
            self.$update({sendTimeVal: 30});
            self.data.sendTime = setInterval(()=>{
                if(self.data.sendTimeVal == 1) {
                    clearInterval(self.data.sendTime);
                }
                self.$update({
                    sendTimeVal: self.data.sendTimeVal - 1
                });
            }, 1000);
            sendPhoneCode({phone: this.data.user.phone});
        },
        goMIndex() {
            var self = this;
            var time;
            self.data.timeObj = time = setInterval(()=>{
                if(self.data.timeNum == 1) {
                    location.href = "#/user/index";
                    clearInterval(time);
                    return;
                }
                self.$update({
                    timeNum: self.data.timeNum - 1
                });
            }, 1000);
        },
        goLIndex() {
            var self = this;
            var time;
            self.data.timeObj = time = setInterval(()=>{
                if(self.data.timeNum == 1) {
                    location.href = "#/signin";
                    clearInterval(time);
                    return;
                }
                self.$update({
                    timeNum: self.data.timeNum - 1
                });
            }, 1000);
        },
        canLeave(){
            clearInterval(this.data.timeObj);
        },
        isTelExists() {
            var self = this;
            isTelExists(this.data.user.phone, ()=>{},(msg)=>{
                self.data.$validation.phone.isPass = self.data.$validation.$isPass = false;
                self.data.$validation.phone.msg = msg;
                self.$update();
            });
        },
        isAccExists() {
            var self = this;
            isAccExists(this.data.user.eMail, ()=>{},(msg)=>{
                self.data.$validation.eMail.isPass = self.data.$validation.$isPass = false;
                self.data.$validation.eMail.msg = msg;
                self.$update();
            });
        },
        validation: {
            baseAttrName: "user",
            model: {
                "eMail": {
                    required: true,
                    email: true,
                    minlength: 6,
                },
                passworld: {
                    required: true,
                    alphaDash: true,
                    minlength: 7
                },
                passworldTwo: {
                    required: true,
                    repeat: "user.passworld",
                    minlength: 7,
                },
                phone: {
                    required: true,
                    phone: true
                },
                phoneCode: {
                    required: true,
                    alphaDash: true
                },
                qq: {
                    qq: true
                }
            }
        }
    }
</script>