<template>
    <headerTemp showIndex="4">
        <div class="container-fluid">
            <div class="view-framework-main">
                <h3>
                    <a class="btn btn-default pull-right ml5" href="#/user/index">返回个人中心</a>
                    申请提现
                </h3>
                {#if isShow}
                <div class="box" r-hide={isSub}>
                    <div class="py50">
                        <form onsubmit="return false;">
                            <div class="form-group">
                                <div class="col-xs-2">
                                    <label class="control-label">选择收款账号：</label>
                                </div>
                                <div class="col-xs-4">
                                    <div class="mr4">
                                        <select class="form-control" r-model="apply.account">
                                            <option value="">请选择收款账号</option>
                                            {#list accounts as account}
                                            <option value="{account.id}">{account.cardNum} - {account.name}</option>
                                            {/list}
                                        </select>
                                    </div>
                                </div>
                                <div class="col-xs-4">
                                    <div class="text-red pt5 pl10" r-hide={$validation.account.isPass}>{$validation.account.msg}</div>
                                </div>
                                <div class="clear"></div>
                            </div>
                            <div class="form-group">
                                <div class="col-xs-2">
                                    <label class="control-label">可提取金额（元）：</label>
                                </div>
                                <div class="col-xs-4">
                                    <div class="mr4 text-red">{maxMoney}</div>
                                </div>
                                <div class="clear"></div>
                            </div>
                            <div class="form-group">
                                <div class="col-xs-2">
                                    <label class="control-label pt5">提取金额：</label>
                                </div>
                                <div class="col-xs-4">
                                    <input class="form-control" type="text" maxlength="10" r-model="apply.money">
                                </div>
                                <div class="col-xs-4">
                                    <div class="text-red pt5 pl10" r-hide={$validation.money.isPass}>{$validation.money.msg}</div>
                                </div>
                                <div class="clear"></div>
                            </div>
                            <hr>
                            <div class="form-group">
                                <div class="col-xs-2">
                                    <label class="control-label pt5">提现密码：</label>
                                </div>
                                <div class="col-xs-4">
                                    <input class="form-control" type="password" maxlength="15" r-model="apply.payPassword">
                                </div>
                                <div class="col-xs-4">
                                    <div class="text-red pt5 pl10" r-hide={$validation.payPassword.isPass}>{$validation.payPassword.msg}</div>
                                </div>
                                <div class="clear"></div>
                            </div>
                            <div class="form-group">
                                <div class="col-xs-4 col-xs-offset-2">
                                    <input class="btn btn-danger btn-block" type="submit" value="提交" {#if !$validation.$isPass}disabled{/if} on-click={this.sendData()}>
                                </div>
                                <div class="clear"></div>
                            </div>
                        </form>
                    </div>
                </div>
                {/if}
                <div class="box" r-hide={!isSub}>
                    <div class="nodata">
                        <i class="iconfont fa fa-check text-success"></i><br>
                        操作成功<br>
                        <p class="mt20">
                            <a class="btn btn-success btn-sm" on-click={this.refreshMoney()}>继续操作</a>
                            <a class="btn btn-default btn-sm ml10" href="#/user/index">返回首页</a>
                        </p>
                    </div>
                </div>
                {#if !isTrueNameVerified}
                <div class="box">
                    <div class="nodata">
                        <i class="iconfont fa fa-times text-danger"></i><br>
                        你还没通过实名认证<br>
                        <p class="mt20">
                            <a class="btn btn-default btn-sm ml10" href="#/user/trueNameVerified">前往实名认证</a>
                        </p>
                    </div>
                </div>
                {/if}
            </div>
        </div>
    </headerTemp>
</template>
<script>
    import {isTrueNameVerified, getEmailAndPhone, trueNameVerified, getMoneyMax} from "../../service/userService.js";
    import gritter from "../../tool/gritter/gritter.js";
    import {getAll} from "../../service/bankCardService.js";
    import {withdraw} from "../../service/moneyService.js";

    export default {
        init() {
            var self = this;
            // isTrueNameVerified(()=>{
            //     self.$update({
            //         isTrueNameVerified: true,
            //         isShow: true
            //     });
            // },()=>{
            //     self.$update("isTrueNameVerified", false);
            // });
            self.refreshMoney();
            getAll((datas)=>{
                self.$update("accounts", datas);
            });
            getMoneyMax((data)=>{
                self.$update({
                    maxMoney: data.money
                });
            });
        },
        data: {
            isShow: true,
            isTrueNameVerified: true,
            isSub: false,
            maxMoney: 0,
            accounts: [],
            apply: {
                account: "",
                money: "",
                payPassword: ""
            }
        },
        refreshMoney() {
            var self = this;
            self.$update({
                isSub: false,
                apply: {
                    account: "",
                    money: "",
                    payPassword: ""   
                }
            });
        },
        sendData() {
            var self = this;
            var bankName = "";
            var cardNum = "";
            for(var i=0,d; d = this.data.accounts[i++];) {
                if(d.id == this.data.apply.account) {
                    cardNum = d.cardNum;
                    bankName = d.bankName;
                }
            }
            withdraw({
                withdrawAmount: this.data.apply.money,
                withdrawPwd: this.data.apply.payPassword,
                bankName: bankName,
                bankId: this.data.apply.account,
                cardNum: cardNum
            }, (money)=>{
                self.$update({
                    isSub: true,
                    maxMoney: money
                });
            }, (msg)=>{
                gritter(msg).warning();
            });
        },
        components: {
            "headerTemp": require("../../component/userTemplate/user.rgl")
        },
        validation: {
            baseAttrName: "apply",
            model: {
                account: {
                    required: true
                },
                money: {
                    required: true,
                    decimal: true,
                    max: 0,
                    eqmin: function() {
                        return this.data.maxMoney;
                    }
                },
                payPassword: {
                    required: true,
                    alphaDash: true,
                    minlength: 7
                },
            }
        }
    }
</script>